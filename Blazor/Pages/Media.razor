@page "/media/{MediaId}"
@inject HttpClient HttpClient
@inject NavigationManager Nav



<h2>@result.Title</h2>
<h3>@result.Author</h3>

<p>@result.Description</p>

@foreach (var copy in result.PhysicalCopies)
{
    <div>
        <h4>@copy.Branch</h4>
        <p>@copy.Status</p>
    </div>
}


@code {
    [Parameter] public string MediaId { get; set; }

    private List<Entities.MediaInfo> mediaResults = new();
    private Entities.MediaInfo result = new();
    private readonly List<Filter> filters = new();


    protected override async Task OnInitializedAsync()
    {
        filters.Add(new Filter("_id", MediaId, DbOperations.Equals));

        var response = await HttpClient.PostAsJsonAsync($"api/media/search?page={1}&count={1}", filters);
        if (response.IsSuccessStatusCode)
        {
            var searchResponse = await response.Content.ReadFromJsonAsync<Response<List<Entities.MediaInfo>>>();
            if (searchResponse != null)
            {
                mediaResults = searchResponse.Data;
                result = mediaResults[0];
            }
        }

        StateHasChanged();
    }

}