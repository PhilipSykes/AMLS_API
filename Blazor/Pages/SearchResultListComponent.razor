@using System.Reflection.Metadata
@using MongoDB.Bson
@using Wasm
<div id="search-card">
    <h3 id="search-media-title">@Title</h3>
    <div id="search-pill-container">
        @foreach (string pill in Pills)
        {
            <div class="pill">@pill</div>
        }
    </div>
    <div id="search-star-rating">
        @for (int i = 1; i <= 5; i++)
        {
            <RatingStar colorValue="@(i <= Rating)"></RatingStar>
        }
    </div>
    <p id="search-genres">@_genres</p>
</div>


@code
{
    [Parameter]
    public string resultString { get; set; }

    
    private BsonArray genresBsonArray;
    private List<string> GenreList = new List<string>();
    private double ratingDouble;
    private List<string> Pills;
    private string type;
    private string Title;
    private int Rating;
    private string _genres;

    protected override async Task OnInitializedAsync()
    {
        BsonDocument result = BsonDocument.Parse(resultString);
        //Round Rating
        ratingDouble = result.GetValue("rating").AsDouble;
        Rating = (int)Math.Round(ratingDouble);
        
        //Add type Pills
        Pills = new List<string>();
        type = result.GetValue("type").AsString;
        Pills.Add(type);
        
        //Form Genre String
        genresBsonArray = result.GetValue("genres").AsBsonArray;
        //Add 
        string[] genresArray = genresBsonArray.Select(x => x.AsString).ToArray();
        foreach (string genre in genresArray)
        {
            GenreList.Add(genre);
        }
        _genres = GetGenreString();
        
        //Set Title
        Title = result.GetValue("title").AsString;
    }

    public string GetGenreString()
    {
        return string.Join(" â€¢ ", GenreList.Take(3));
    }
}
