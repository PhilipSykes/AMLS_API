@inject IJSRuntime JS
@inject NavigationManager Nav

<div @onclick="UpdateRouteParamAndNavigate" id="search-card">
    <h3 id="search-media-title">@Media.Title</h3>
    <div id="search-pill-container">
        <div class="pill">@Media.Type</div>
        @if (IsAvailable)
        {
            <div class="pill available">Available Near You</div>
        }
        else
        {
            <div class="pill unavailable">Not Available Near You</div>
        }

    </div>
    <div id="search-star-rating">
        @for (var i = 1; i <= 5; i++)
        {
            <RatingStar colorValue="@(i <= Rating)"></RatingStar>
        }
    </div>
    <p id="search-genres">@_genres</p>
</div>


@code















{
    [Parameter] public Entities.MediaInfo Media { get; set; } = new();

    public bool IsAvailable { get; set; }

    private List<string> Pills;
    private int Rating => (int)Math.Round(Media.Rating);
    private string _genres => string.Join(" â€¢ ", Media.Genres.Take(3));

    private string _preferedBranch = "6733491ba1ed2d02eef46a42";


    protected override void OnInitialized()
    {
        foreach (var copy in Media.PhysicalCopies)
        {
            if (copy.Status == "Available" && copy.Branch == _preferedBranch)
            {
                IsAvailable = true;
            }
        }
    }

    private async Task UpdateRouteParamAndNavigate()
    {
        Nav.NavigateTo($"/media/{Media.ObjectID}");
    }
}
