@page "/Login"
@inject HttpClient HttpClient
@inject ISessionStorageService SessionStorage
<h3>Login</h3>

<div>
    <div>
        <h3>Login</h3>
    </div>
    <div class="container">
        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator/>
            <InputText @bind-Value="loginModel.Email" type="text" placeholder="e-mail"/>
            <InputText @bind-Value="loginModel.Password" type="password" placeholder="password"/>
            <a href="#">Forgot Password?</a>
            <button type="submit">Log in</button>

            @if (!string.IsNullOrEmpty(error))
            {
            <div class="alert">@error</div>
            }
        </EditForm>
    </div>
</div>

@code {
    private PayLoads.Login loginModel = new() { Email = "", Password = "" };
    private string error;

    private async Task HandleLogin()
    {
        var request = new Request<PayLoads.Login> { Data = loginModel };

        try
        {
            var response = await HttpClient.PostAsJsonAsync("api/auth/login", request);

            if (response.IsSuccessStatusCode)
            {
                var tokenResponse = await response.Content.ReadFromJsonAsync<Response<AccessToken>>();
                if (tokenResponse != null)
                {
                    await SessionStorage.SetItemAsync("token", tokenResponse.Data.Token);
                }
            }

            else
            {
                error = "Invalid credentials";
            }
        }
        catch
        {
            error = "Login failed";
        }
    }
}