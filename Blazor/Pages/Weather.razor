@page "/weather"

@inject HttpClient HttpClient

<PageTitle>Weather</PageTitle>

<h1>Weather Forecast</h1>

<SearchResultListComponent/>

@if (_weatherForecasts == null)
{
    <p>Loading...</p>
}
else if (_errorMessage != null)
{
    <p>Error: @_errorMessage</p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th>Temp. (C)</th>
            <th>Temp. (F)</th>
            <th>Summary</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var forecast in _weatherForecasts)
        {
            <tr>
                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                <td>@forecast.TemperatureF</td>
                <td>@forecast.Summary</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] _weatherForecasts;
    private string _errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _weatherForecasts = await HttpClient.GetFromJsonAsync<WeatherForecast[]>("api/weatherforecast");
        }
        catch (Exception ex)
        {
            _errorMessage = ex.Message;
        }
    }

    private class WeatherForecast
    {
        public DateTime Date { get; set; }
        public int TemperatureC { get; set; }
        public int TemperatureF { get; set; }
        public string Summary { get; set; }
    }
}