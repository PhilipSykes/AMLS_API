@using Wasm 
@using MongoDB.Bson
<tr> 
    <td>@Media.ObjectID</td> 
    <td>@Media.Title</td> 
    <td><span class="badge type-badge">@Media.Type</span></td> 
    <td> @if (IsAvailable)
         {
             <span class="badge status-badge available">Available</span>
         }
         else
         {
             <span class="badge status-badge unavailable">Unavailable</span>
         } 
    </td> 
    <td><span class="badge">@Media.Language</span></td> 
    <td><span class="badge branch-badge">@Media.PhysicalCopies[0].Branch</span></td> 
    <td>
        
        <div class="action-buttons">
            <button class="action-btn" @onclick="() => OnViewDetails(Media)">
                <svg class="action-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>
                </svg>
            </button> 
            <button class="action-btn edit" @onclick="() => OnEdit(Media)">
                <svg class="action-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                </svg>
            </button>
        </div>
    </td> 
</tr>


@code { 
    [Parameter] 
    public Entities.MediaInfo Media { get; set; } = new(); 
    [Parameter] 
    public EventCallback<Entities.MediaInfo> OnViewDetailsCallback { get; set; } 
    [Parameter] 
    public EventCallback<Entities.MediaInfo> OnEditCallback { get; set; } 
    public bool IsAvailable { get; set; }

    private async Task OnViewDetails(Entities.MediaInfo item)
    {
        await OnViewDetailsCallback.InvokeAsync(item);
    }

    private async Task OnEdit(Entities.MediaInfo item)
    {
        await OnEditCallback.InvokeAsync(item);
    } 
    
    protected override void OnInitialized()
    {
        foreach (var copy in Media.PhysicalCopies)
        {
            if (copy.Status == "Available")
            {
                IsAvailable = true;
            }
        }
    }

}
