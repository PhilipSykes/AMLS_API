@namespace Blazor.Layout
@inject ISessionStorageService SessionStorage
@inject AuthenticationStateProvider AuthProvider

<nav class="navbar">
    <div class="nav-content">
        <div class="nav-left">
            <a href="/" class="logo">AML</a>
        </div>
        <div class="nav-center">
            @if (currentUser != null)
            {
                @foreach (var link in GetAuthorizedLinks())
                {
                    <a href="@link.Href">@link.Text</a>
                }
            }
        </div>
    </div>
</nav>

@code {
    private ClaimsPrincipal? currentUser;
    
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        currentUser = authState.User;
        AuthProvider.AuthenticationStateChanged += OnAuthenticationStateChanged;
    }

    private async void OnAuthenticationStateChanged(Task<AuthenticationState> task)
    {
        var authState = await task;
        currentUser = authState.User;
        StateHasChanged();
    }

    private IEnumerable<NavLink> GetAuthorizedLinks()
    {
        if (currentUser == null) yield break;

        foreach (var link in _navLinks)
        {
            if (link.Roles.Length == 0 || link.Roles.Any(role => 
                    currentUser.IsInRole(role)))
            {
                yield return link;
            }
        }
    }
    private record NavLink(string Text, string Href, string[] Roles);
    
    private readonly NavLink[] _navLinks = new[]
    {
        new NavLink("Login", "/login", Array.Empty<string>()),
        new NavLink("Inventory", "/inventory", new[] { PolicyRoles.BranchManager, PolicyRoles.BranchLibrarian }),
        new NavLink("Staff Management", "/staff", new[] { PolicyRoles.BranchManager }),
        new NavLink("Branch Reports", "/reports", new[] { PolicyRoles.BranchManager }),
        new NavLink("System Metrics", "/metrics", new[] { PolicyRoles.SystemAdmin }),
        new NavLink("User Management", "/users", new[] { PolicyRoles.SystemAdmin }),
        new NavLink("My Reservations", "/reservations", new[] { PolicyRoles.Member }),
        new NavLink("My Loans", "/loans", new[] { PolicyRoles.Member }),
        new NavLink("Logout", "/logout",new[] { PolicyRoles.Member,PolicyRoles.BranchManager,PolicyRoles.BranchLibrarian,PolicyRoles.SystemAdmin })
    };
}