
@namespace Blazor.Layout
@inject ISessionStorageService SessionStorage
@inject AuthStateService AuthState

<nav class="navbar">
    <div class="nav-content">
        <div class="nav-left">
            <a href="/" class="logo">AML</a>
        </div>
        <div class="nav-center">
            (Nav)
        </div>
        <div class="nav-right">
            @if (email != null)
            {
                <span class="username-display">
                    Logged in as: @email
                    @if (!string.IsNullOrEmpty(userRole))
                    {
                        <small>(@userRole)</small>
                    }
                </span>
            }
            <a href="/login" class="profile-icon">
                <i class="fas fa-user-circle"></i>
            </a>
        </div>
    </div>
</nav>

@code {
    private string? email;
    private string? userRole;
    private ClaimsPrincipal? currentUser;

    protected override async Task OnInitializedAsync()
    {
        currentUser = await AuthState.GetUser();
        await UpdateUserInfo();

        AuthState.OnChange += OnAuthStateChanged;
    }

    private async Task UpdateUserInfo()
    {
        if (currentUser != null)
        {
            email = currentUser.FindFirst(ClaimTypes.Email)?.Value;
            userRole = currentUser.FindFirst(ClaimTypes.Role)?.Value;
        }
        else
        {
            email = null;
            userRole = null;
        }
    }

    private async void OnAuthStateChanged()
    {
        currentUser = await AuthState.GetUser();
        await UpdateUserInfo();
        StateHasChanged();
    }

}