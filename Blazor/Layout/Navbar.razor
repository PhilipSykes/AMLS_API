
@namespace Blazor.Layout
@inject ISessionStorageService SessionStorage
@inject AuthStateService AuthState

<nav class="navbar">
    <div id="desktop-nav">
        <div class="nav-left">
            <a href="https://localhost:7001/" class="home">AML</a>
        </div>
        <div class="nav-right">

            @switch (userRole)
            {
                case "SystemAdmin":
                    <div>admin</div>
                    <a class="button-primary" @onclick="AuthState.Logout">Log Out</a>
                    break;
                case "BranchManager":
                    <div>branch manager</div>
                    <a class="button-primary" @onclick="AuthState.Logout">Log Out</a>
                    break;
                case "BranchLibrarian":
                    <div>branch librarian</div>
                    break;
                case "Member":
                    <div>member</div>
                    <a class="button-primary" @onclick="AuthState.Logout">Log Out</a>
                    break;
                default:
                    <a class="button-primary" href="/login">Sign In</a>
                    break;
            }
        </div>
    </div>
    <div id="mobile-nab">
        
    </div>
</nav>

@code {
    private string? email;
    private string? userRole;
    private ClaimsPrincipal? currentUser;

    protected override async Task OnInitializedAsync()
    {
        currentUser = await AuthState.GetUser();
        await UpdateUserInfo();

        AuthState.OnChange += OnAuthStateChanged;
    }

    private async Task UpdateUserInfo()
    {
        if (currentUser != null)
        {
            email = currentUser.FindFirst(ClaimTypes.Email)?.Value;
            userRole = currentUser.FindFirst(ClaimTypes.Role)?.Value;
        }
        else
        {
            email = null;
            userRole = null;
        }
    }

    private async void OnAuthStateChanged()
    {
        currentUser = await AuthState.GetUser();
        await UpdateUserInfo();
        StateHasChanged();
    }

}